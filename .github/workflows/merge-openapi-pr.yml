name: OpenAPI Next Prerelease

env:
  FRONTEGG_CLIENT_ID: ${{ secrets.FRONTEGG_CLIENT_ID_DEV }}
  FRONTEGG_API_KEY: ${{ secrets.FRONTEGG_API_KEY_DEV }}
  NODE_ENV: 'development'
  APPLICATION_MODE: 'api'
  OPENAPI_FOLDER: 'openapi-specs'

on:
  push:
    branches:
      - master

jobs:
  mark-awaiting-trigger:
    name: Check OpenAPI Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions-ecosystem/action-get-merged-pull-request@v1
        id: get-merged-pull-request
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.DEV_AWS_SECRET_ID }}
#          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Config Git User
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

#      - uses: actions/setup-node@v3
#        with:
#          cache: 'yarn'
#
#      - name: 'Authenticate with GitHub Packages'
#        run: yarn auth
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Authenticate with GitHub Packages'
        run: yarn auth
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Yarn Install
        run: |
          yarn install --frozen-lockfile
          yarn
          lerna bootstrap --ci

#      - name: Create Env
#        run: |
#          cp ./development.env.template ./development.env
#          docker-compose up -d db redis stripe

#      - name: Export OpenAPI Spec File
#        run: yarn ts-node -r tsconfig-paths/register openapi-tools/openapi-spec.exporter.ts

#      - name: Push Tag
#        run: |
#          git tag -a "${{ steps.git-vars.outputs.next_version_tag }}" \
#          -m "PR #${{ steps.get-merged-pull-request.outputs.number }} ${{ steps.get-merged-pull-request.outputs.title }}"
#          git push --tags origin "${{ steps.git-vars.outputs.next_version_tag }}"

#      - name: Store OpenAPI Spec Artifact (S3)
#        uses: jakejarvis/s3-sync-action@master
#        env:
#          AWS_S3_BUCKET: 'openapi-spec-artifacts'
#          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_SECRET_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#          SOURCE_DIR: 'openapi-specs'
#          DEST_DIR: ${{ steps.vars.outputs.next_version_tag }}

      - name: Git Vars
        id: git-vars
        run: |
          echo "prev_version=$(grep -m1 version lerna.json | awk -F: '{ print $2 }' | sed 's/[", ]//g')" >> $GITHUB_OUTPUT

      - name: Version Packages
        run: yarn lerna version --yes --preid next --conventional-commits --conventional-prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Packages
        run: yarn lerna publish --preid next from-package --dist-tag next --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git Vars
        id: git-vars
        run: |
          echo "next_version=$(grep -m1 version lerna.json | awk -F: '{ print $2 }' | sed 's/[", ]//g')" >> $GITHUB_OUTPUT

      - name: Create PR Comment
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.get-merged-pull-request.outputs.number }}
          body: |
            New OpenAPI Version :tada: \
            [${{ steps.git-vars.outputs.next_version }}](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.git-vars.outputs.next_version }}) has been created.

      - name: Readme.io - Create Version
        run: |
          yarn rdme versions:create ${{ steps.git-vars.outputs.next_version }} \
          --main=false \
          --beta=false \
          --isPublic=false \
          --key=rdme_xn8s9h15eb2ffe5499a8b83b2cd81e6c8ed68a71d53f6ca6ac483508cae5b574e0bed6 \
          --codename=v${{ steps.git-vars.outputs.next_version }} \
          --fork=${{ steps.git-vars.outputs.prev_version }}

      - name: Readme.io - Sync OpenAPI Spec
        run: |
          yarn pack @omermorad/openapi.spec
          tar â€“xvf omermorad-v${{ steps.git-vars.outputs.next_version }}.tgz documents.tar.gz
          ls -a
          yarn rdme openapi ${{ env.OPENAPI_FOLDER }}/v${{ steps.git-vars.outputs.next_version }}-openapi.spec.json \
          --version=${{ steps.git-vars.outputs.next_version }} \
          --key=rdme_xn8s9h15eb2ffe5499a8b83b2cd81e6c8ed68a71d53f6ca6ac483508cae5b574e0bed6 \
          --update
